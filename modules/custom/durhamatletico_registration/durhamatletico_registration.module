<?php

/**
 * @file
 * Contains durhamatletico_registration.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_user_login().
 */
function durhamatletico_registration_user_login($account) {
  // Check if user hasn't created a registration node. If so, direct them to
  // register.
  $reg_node = \Drupal::service('durhamatletico_registration.registration')->getRegistrationNodeForUser($account);
  if (!count(reset($reg_node))) {
    $response = new RedirectResponse('/node/add/registration');
    $response->send();
  }
}

/**
 * {@inheritdoc}
 */
function durhamatletico_registration_node_insert(Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getType() === 'registration') {
    // If needed, make sure team node is updated with entity reference to player.
    \Drupal::service('durhamatletico_registration.registration')->assignPlayerToTeam($entity);
    // Send mail.
    \Drupal::service('plugin.manager.mail')->mail('durhamatletico_registration', 'new_registration_admin', 'info@durhamatletico.com', \Drupal::languageManager()->getDefaultLanguage()->getId(), $entity, 'info@durhamatletico.com');
    $author = \Drupal\user\Entity\User::load($entity->getOwnerId());
    \Drupal::service('plugin.manager.mail')->mail('durhamatletico_registration', 'new_registration_user', $author->getEmail(), \Drupal::languageManager()->getDefaultLanguage()->getId(), $entity, 'info@durhamatletico.com');
  }
}

/**
 * {@inheritdoc}
 */
function durhamatletico_registration_node_update(Drupal\Core\Entity\EntityInterface $entity) {
  // If needed, make sure team node is updated with entity reference to player.
  if ($entity->getType() === 'registration') {
    \Drupal::service('durhamatletico_registration.registration')->assignPlayerToTeam($entity);
  }
}

/**
 * Implements hook_mail().
 */
function durhamatletico_registration_mail($key, &$message, $params) {
  switch ($key) {
    case 'new_registration_admin':
      $message['subject'] = 'New registration: ' . $params->getTitle();
      $message['body'][] = 'A new registration was received, please see https://www.durhamatletico.com/node/' . $params->id();
      break;
    case 'new_registration_user':
      $message['subject'] = 'Thank you for registering!';
      $author = \Drupal\user\Entity\User::load($params->getOwnerId());
      $markup = 'Dear ' . $author->getDisplayName() . ',' . "\n\n";
      $markup .= 'Thank you for registering for the winter futsal league! We are excited to have you join us. We will be in touch soon with more information as teams are formed and we put the schedule together. In the meantime, feel free to contact us at info@durhamatletico.com with any questions!' . "\n\n";
      $markup .= 'David & Kosta for Durham Atletico';
      $message['body'][] = $markup;
      break;
  }
}

/**
 * Implements hook_help().
 */
function durhamatletico_registration_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the durhamatletico_registration module.
    case 'help.page.durhamatletico_registration':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides registration functionality for Durham Atletico leagues.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function durhamatletico_registration_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_registration_form') {
    // If the user already created a registration, direct them back to theirs.
    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    \Drupal::service('durhamatletico_registration.registration')->canCreateNewRegistration($user);

    if (\Drupal::currentUser()->hasPermission('administer content')) {
      return;
    }

    // Hide fields from non-privileged users.
    unset($form['revision_information']);
    unset($form['revision_log']);
    $form['title']['#access'] = FALSE;
    $form['title']['widget'][0]['value']['#default_value'] = \Drupal::currentUser()->getDisplayName() . ' - Winter 2016 registration';
  }
}

/**
 * Implements hook_node_access().
 */
function durhamatletico_registration_node_access(\Drupal\node\NodeInterface $node, $op, \Drupal\Core\Session\AccountInterface $account) {
  $type = $node->bundle();
  if ($type == 'registration') {
    return \Drupal::service('durhamatletico_registration.registration')->nodeAccessRegistration($node, $op, $account);
  }
  return \Drupal\Core\Access\AccessResult::neutral();
}

/**
 * Implements hook_theme().
 */
function durhamatletico_registration_theme() {
  $theme = [];

  return $theme;
}
